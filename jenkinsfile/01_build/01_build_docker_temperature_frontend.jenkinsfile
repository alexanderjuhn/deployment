pipeline {
    agent {
        label "master"
    }
    
    tools { 
        jdk 'java11' 
    }
    
    environment {         
        LC_ALL = 'en_US.UTF-8'         
        LANG    = 'en_US.UTF-8'         
        LANGUAGE = 'en_US.UTF-8' 
        // This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "${env.NEXUS_REPO}"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "home"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "nexus"
        // Container Image to build
        CONTAINER_IMAGE = "${env.DOCKER_REPO}/temperaturefrontend:${env.BUILD_NUMBER}"
        // Docker Login
        DOCKER_LOGIN = credentials('DOCKER_USER')
        // Remaining environment variables are set under 
        // Manage Jenkins > Configure System > Global properties > Environment variables
    }

    stages {
        stage('Clean working directory'){
            steps{
                sh "rm -f -R ${env.WORKSPACE}/*"
            }
        }
        
        stage('Checkout SCM') {
            steps {
                git branch: 'master',
                credentialsId: 'SSH_Key',
                url: "git@${env.GIT_REPO}:/datengrab/hd/git/temperatur_frontend/home.git"
            }
        }
        
        stage('Build binarys'){
            steps {
                sh """
                    cd temperatureFrontend
                    npm install
                    ng build"""
                sh 'cd temperatureFrontend && cd dist && zip -r temperatureFrontend.zip temperatureFrontend'
            }
        }
        
        stage('Build container'){
            steps {
                sh """
                    cd temperatureFrontend
                    docker build -t ${env.CONTAINER_IMAGE}  -f dockerfile .
                    docker tag ${env.CONTAINER_IMAGE} ${env.CONTAINER_IMAGE}
                """
            }
        }
        
        stage('Push container'){
            steps {
                sh """
                    docker login ${env.DOCKER_REPO} -u ${env.DOCKER_LOGIN_USR} -p ${env.DOCKER_LOGIN_PSW}
                    docker push ${env.CONTAINER_IMAGE}
                """
            }
        }
        
        stage('Publish to Nexus') {
            steps{
                echo "Do nothing"
                //nexusPublisher nexusInstanceId: 'nexus', 
                //nexusRepositoryId: 'home', 
                //packages: 
                //[[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: 'zip', filePath: 'temperatureFrontend/dist/temperatureFrontend.zip']], 
                //mavenCoordinate: [artifactId: 'RoomStatusFrontend', groupId: 'net.juhn.roomapps', packaging: 'zip', version: '${BUILD_NUMBER}']]]
            }
        }
        
    }
}
