pipeline {
    agent {
        label "x86"
    }

    environment {
        GIT_USERNAME = 'git'
        GIT_REPO_DEPLOYMENT = "${env.GIT_REPO}:/datengrab/hd/git/deployment.git"
        GIT_REPO_CONFIG = "${env.GIT_REPO}:/datengrab/hd/git/config.git"
    }
    
    stages {
        stage('Clone deployment repository'){
            steps{
                dir('deployment'){
                    git branch: 'master',
                    credentialsId: 'SSH_Key',
                    url: "${env.GIT_USERNAME}@${env.GIT_REPO_DEPLOYMENT}"
                    
                }
                
            }
        }
        
        stage('Checkout config'){
            steps{
                dir('config'){
                    git branch: 'master',
                    credentialsId: 'SSH_Key',
                    url: "${env.GIT_USERNAME}@${env.GIT_REPO_CONFIG}"                    
                }
            }
        }

        stage('Run Helm deployment'){
            steps{
                sh """
                    helm upgrade -i ${env.ENVIRONMENT}-backend deployment/helm/RoomAppsBackend -f ./config/helm/RoomApps/${env.ENVIRONMENT}/backend_values.yaml --set roomworker.version=${env.BUILD_ROOMWORKER} --set roomstatus.version=${env.BUILD_ROOMSTATUS} --set roomobserver.version=${env.BUILD_ROOMOBSERVER}
                """
            }
        }
    }

    post {
        always {
            script{
                switch("${currentBuild.currentResult}") {
                    case "SUCCESS":
                        COLOR="good"
                        break
                    case "FAILURE":
                        COLOR="error"
                        break
                    default:
                        COLOR="warning"
                        break
                }
                slackSend color: "${COLOR}", message: "Pipeline : ${env.JOB_NAME} - ${env.BUILD_NUMBER} : ${currentBuild.currentResult}"
            }
        }
    }
}

