 
pipeline {
    agent {
        label "tomcat"
    }

    environment {                
        // Where your Nexus is running
        NEXUS_URL = "${env.NEXUS_REPO}"
        // Nexus Login
        NEXUS_LOGIN = credentials('nexus')
    }
    
    stages {
        stage('Clean working directory'){
            steps{
                sh "rm -f -R ${env.WORKSPACE}/*"
            }
        }
        stage('Download artifacts'){
            steps{ 
                sh "curl -u ${env.NEXUS_LOGIN_USR}:${env.NEXUS_LOGIN_PSW} -X GET 'http://${env.NEXUS_REPO}/service/rest/v1/search/assets?group=net.juhn.roomapps&name=RoomStatusFrontend&version=${params.Build}&maven.extension=zip' | grep -Po '\"downloadUrl\" : \"\\K.+(?=\",)' |  xargs curl -fsSL -o RoomStatusFrontend.zip"
                sh "pwd"
            }
        }
        stage('Stop server'){
            steps{
                sh "sudo service tomcat stop"
            }
        }
        
        stage('Delete old application'){
            steps{
                sh 'rm -R /opt/tomcat/latest/webapps/temperatureFrontend'
            }
        }
        
        stage('Copy new application to webapps'){
            steps{
                sh 'unzip RoomStatusFrontend.zip'
                sh 'cp -R temperatureFrontend /opt/tomcat/latest/webapps'
            }        
        }
        
        stage('Start application'){
            steps{
                sh "sudo service tomcat start"
            }
        }
    }

    post {
        always {
            script{
                switch("${currentBuild.currentResult}") {
                    case "SUCCESS":
                        COLOR="good"
                        break
                    case "FAILURE":
                        COLOR="error"
                        break
                    default:
                        COLOR="warning"
                        break
                }
                slackSend color: "${COLOR}", message: "Pipeline : ${env.JOB_NAME} - ${env.BUILD_NUMBER} : ${currentBuild.currentResult}"
            }
        }
    }
}
