apiVersion: apps/v1
kind: Deployment
metadata:
  name: room-observer-deployment
  labels:
    app: room-observer
  namespace: {{ .Values.environment }}
spec:
  selector:
    matchLabels:
      app: room-observer
  replicas: 3
  template:
    metadata:
      labels:
        app: room-observer
      annotations:
        ad.datadoghq.com/room-observer.check.id: room-observer
        ad.datadoghq.com/room-observer.checks: |
          {
            "openmetrics": {
              "init_config": {},
              "instances": [
                {
                  "openmetrics_endpoint": "http://%%host%%:8081/actuator/prometheus",
                  "namespace": "dev",
                  "metrics": [".*"]
                }
              ]
            }
          }
    spec:
      hostAliases:
      - ip: {{ .Values.hostAliasDB.ip }}
        hostnames:
        - {{ .Values.hostAliasDB.hostname }}
      nodeSelector:
        kubernetes.io/arch: arm64
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.roomobserver.config }}
        - name: local-build-volume-roomobserver
          persistentVolumeClaim:
            claimName: local-build-volume-roomobserver
      containers:
      - name: room-observer
        image: "{{ .Values.roomobserver.image }}:{{ .Values.roomobserver.version }}"
        #command: [ "/bin/sh", "-c", "--" ]
        #args: [ "while true; do sleep 30; done;" ]
        livenessProbe:
          httpGet:
            path: /actuator/prometheus
            port: {{ .Values.roomobserver.containerPort }}
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /actuator/prometheus
            port: {{ .Values.roomobserver.containerPort }}
          initialDelaySeconds: 180
        resources: {}
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        ports:
        - containerPort: {{ .Values.roomobserver.containerPort }}
        volumeMounts:
            - name: config-volume
              mountPath: /workspace/config
            - name: local-build-volume-roomobserver
              mountPath: /tmp/log
              subPath: roomobserver
      imagePullSecrets:
        - name: nexus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: room-worker-deployment
  labels:
    app: room-worker
  namespace: {{ .Values.environment }}
spec:
  selector:
    matchLabels:
      app: room-worker
  replicas: 1
  template:
    metadata:
      labels:
        app: room-worker
      annotations:
        ad.datadoghq.com/room-observer.check.id: room-observer
        ad.datadoghq.com/room-observer.checks: |
          {
            "openmetrics": {
              "init_config": {},
              "instances": [
                {
                  "openmetrics_endpoint": "http://%%host%%:8081/actuator/prometheus",
                  "namespace": "dev",
                  "metrics": [".*"]
                }
              ]
            }
          }
    spec:
      hostAliases:
      - ip: {{ .Values.hostAliasDB.ip }}
        hostnames:
        - {{ .Values.hostAliasDB.hostname }}
      nodeSelector:
        kubernetes.io/arch: arm64
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.roomworker.config }}
      containers:
      - name: room-worker
        image: "{{ .Values.roomworker.image }}:{{ .Values.roomworker.version }}"
        resources: {}
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]

        ports:
        - containerPort: {{ .Values.roomworker.containerPort }}
        livenessProbe:
          httpGet:
            path: /actuator/prometheus
            port: {{ .Values.roomworker.containerPort }}
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /actuator/prometheus
            port: {{ .Values.roomworker.containerPort }}
          initialDelaySeconds: 180
        volumeMounts:
            - name: config-volume
              mountPath: /workspace/config
            - name: config-volume
              mountPath: /config
      imagePullSecrets:
        - name: nexus
